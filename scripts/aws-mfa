#!/bin/bash
set -e

USER_DIR=${USER_DIR:-~}

unset AWS_PROFILE
unset AWS_ACCESS_KEY_ID
unset AWS_SECRET_ACCESS_KEY
unset AWS_SESSION_TOKEN

if [[ -z $1 ]]; then
    AWS_PROFILE=$(aws configure list-profiles | peco --select-1 --query "$LBUFFER")
else
    AWS_PROFILE=$1
fi

if [[ $AWS_PROFILE == *"-mfa" || $AWS_PROFILE == *"-admin" ]]; then
    echo "Do not select '*-mfa' or '*-admin' profile."
    exit 1
fi

export AWS_PROFILE
echo "Current profile is \"${AWS_PROFILE}\"."
sed -i '/AWS/d' ${USER_DIR}/.env

if [[ -n $2 ]]; then
    ASSUME_ROLE_ARN=$2
    AWS_PROFILE_NEW="${AWS_PROFILE}-admin"
    EXPIRATION_TIME="$(date --date $(aws --profile $AWS_PROFILE_NEW configure get aws_session_expiration) +%s 2> /dev/null || echo 0 )"
    echo "Assuming role to \"${ASSUME_ROLE_ARN}\" mode."
else
    AWS_PROFILE_NEW="${AWS_PROFILE}-mfa"
    EXPIRATION_TIME="$(date --date $(aws --profile $AWS_PROFILE_NEW configure get aws_session_expiration) +%s 2> /dev/null || echo 0 )"
    echo "Get session token with mfa mode."
fi

CURRENT_TIME="$(date +%s)"
if [ $CURRENT_TIME -lt $EXPIRATION_TIME ]; then # -lt : '<'
    echo "Existing session token is not expired, so use it."
    echo "Successful setting session token."
    echo "export AWS_PROFILE=${AWS_PROFILE_NEW}" >> ${USER_DIR}/.env
    exit 0
fi

AccessKeyId=$(aws configure get aws_access_key_id)

output=$(aws iam get-access-key-last-used --access-key-id  ${AccessKeyId} 2>&1 || true)
if echo "$output" | grep -q '"UserName"'; then
    UserName=$(echo "$output" | jq -r '.UserName')
else
    UserName=$(echo "$output" | sed -n 's/.*arn:aws:iam::[0-9]\+:user\/\([^ ]*\).*/\1/p')
fi

echo "Fetching MFA device serial number for the user \"${UserName}\"..."
SerialNumber=$(aws iam list-mfa-devices --user-name ${UserName} | jq -r '.MFADevices[].SerialNumber' | peco --select-1 --query "$LBUFFER")

echo "MFA Serial Number: ${SerialNumber}"
read -p 'Enter MFA Code: ' code

if [[ -n $ASSUME_ROLE_ARN ]]; then
    Credentials=$(aws sts assume-role --role-arn ${ASSUME_ROLE_ARN} --role-session-name switch-admin --serial-number ${SerialNumber} --token-code ${code} --duration-seconds $((60*60*12)))
    AWS_PROFILE="${AWS_PROFILE}-admin"
else
    Credentials=$(aws sts get-session-token --serial-number ${SerialNumber} --token-code ${code} --duration-seconds $((60*60*12)))
    AWS_PROFILE="${AWS_PROFILE}-mfa"
fi

aws configure set region ap-northeast-1
aws configure set aws_access_key_id "$(echo ${Credentials} | jq -r '.Credentials.AccessKeyId')"
aws configure set aws_secret_access_key "$(echo ${Credentials} | jq -r '.Credentials.SecretAccessKey')"
aws configure set aws_session_token "$(echo ${Credentials} | jq -r '.Credentials.SessionToken')"
aws configure set aws_session_expiration "$(echo ${Credentials} | jq -r '.Credentials.Expiration')"

echo "export AWS_PROFILE=${AWS_PROFILE}" >> ${USER_DIR}/.env

echo "Successful get session token."
